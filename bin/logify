#!/usr/bin/env python

import collections
import itertools
import jinja2
import json
import locale
import sys
import re
import time

# These are the keys that are required/expected by each log entry.
REQUIRED_KEYS = [
    u'level',
    u'ts',
    u'msg',
]

def main(args):
    # Read in the file, discarding whitespace and splitting into lines.
    with open(args[0]) as filedesc:
        log = filedesc.read().strip().split('\n')

    # Parse each line into raw JSON
    log = [json.loads(x) for x in log]

    # Convert takes a rwa object and converts it into our internal representation.
    def convert(entry):
        # Convert white space to something HTML can render.
        def htmlify(value):
            if isinstance(value, basestring):
                return re.sub(ur'\n', ur'<br />', value)
            return value

        # Extract custom labels, doing any conversion on the way.
        labels = {k: htmlify(entry[k]) for k in entry if k not in REQUIRED_KEYS}

        return {
            u'level': entry['level'],
            u'timestamp': time.ctime(entry['ts']),
            u'message': entry['msg'],
            u'labels': labels,
        }

    log = [convert(x) for x in log]

    # Group our log entries by cluster
    def key(entry):
        if u'cluster' in entry[u'labels']:
            return entry[u'labels'][u'cluster']
        return u'global'

    tables = [{u'title': k, u'rows': list(v)} for k, v in itertools.groupby(sorted(log, key=key), key)]

    with open('templates/index.html') as tmpl:
        template = jinja2.Template(tmpl.read())
    print template.render(tables=tables).encode('utf-8')


if __name__ == '__main__':
    main(sys.argv[1:])

# vi: ts=4 et:
